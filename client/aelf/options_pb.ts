// @generated by protoc-gen-es v1.7.1 with parameter "target=ts"
// @generated from file aelf/options.proto (package aelf, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldOptions, FileOptions, MessageOptions, MethodOptions, proto3, ServiceOptions } from "@bufbuild/protobuf";

/**
 * @generated from extension: string identity = 500001;
 */
export const identity = proto3.makeExtension<FileOptions, string>(
  "aelf.identity", 
  FileOptions, 
  { no: 500001, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

/**
 * @generated from extension: repeated string base = 505001;
 */
export const base = proto3.makeExtension<ServiceOptions, string[]>(
  "aelf.base", 
  ServiceOptions, 
  { no: 505001, kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
);

/**
 * @generated from extension: string csharp_state = 505030;
 */
export const csharp_state = proto3.makeExtension<ServiceOptions, string>(
  "aelf.csharp_state", 
  ServiceOptions, 
  { no: 505030, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

/**
 * @generated from extension: bool is_view = 506001;
 */
export const is_view = proto3.makeExtension<MethodOptions, boolean>(
  "aelf.is_view", 
  MethodOptions, 
  { no: 506001, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);

/**
 * @generated from extension: bool is_event = 50100;
 */
export const is_event = proto3.makeExtension<MessageOptions, boolean>(
  "aelf.is_event", 
  MessageOptions, 
  { no: 50100, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);

/**
 * @generated from extension: bool is_indexed = 502001;
 */
export const is_indexed = proto3.makeExtension<FieldOptions, boolean>(
  "aelf.is_indexed", 
  FieldOptions, 
  { no: 502001, kind: "scalar", T: 8 /* ScalarType.BOOL */ },
);


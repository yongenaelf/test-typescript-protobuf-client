// @generated by protoc-gen-es v1.7.1 with parameter "target=ts"
// @generated from file message/authority_info.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address } from "../aelf/core_pb.js";

/**
 * @generated from message AuthorityInfo
 */
export class AuthorityInfo extends Message<AuthorityInfo> {
  /**
   * @generated from field: aelf.Address contract_address = 1;
   */
  contractAddress?: Address;

  /**
   * @generated from field: aelf.Address owner_address = 2;
   */
  ownerAddress?: Address;

  constructor(data?: PartialMessage<AuthorityInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "AuthorityInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contract_address", kind: "message", T: Address },
    { no: 2, name: "owner_address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorityInfo {
    return new AuthorityInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorityInfo {
    return new AuthorityInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorityInfo {
    return new AuthorityInfo().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorityInfo | PlainMessage<AuthorityInfo> | undefined, b: AuthorityInfo | PlainMessage<AuthorityInfo> | undefined): boolean {
    return proto3.util.equals(AuthorityInfo, a, b);
  }
}

